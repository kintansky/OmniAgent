# Generated by Django 2.1.7 on 2019-06-02 13:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OneWayDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name', models.CharField(max_length=255)),
                ('port', models.CharField(max_length=40)),
                ('port_status', models.CharField(max_length=10)),
                ('port_phy_status', models.CharField(max_length=10)),
                ('port_des', models.CharField(max_length=255)),
                ('record_time', models.DateTimeField()),
            ],
            options={
                'ordering': ['-record_time'],
            },
        ),
        migrations.CreateModel(
            name='OpticalMoudleDiff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name', models.CharField(max_length=255)),
                ('port', models.CharField(max_length=40)),
                ('now_moudle', models.CharField(max_length=60)),
                ('ever_moudle', models.CharField(max_length=60)),
                ('status', models.CharField(choices=[('NEW', 'plugin'), ('MISS', 'missing'), ('CH', 'changed')], max_length=20)),
                ('record_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-record_time'],
            },
        ),
        migrations.CreateModel(
            name='PortErrorDiff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name', models.CharField(max_length=255)),
                ('port', models.CharField(max_length=40)),
                ('nowCRC', models.IntegerField()),
                ('nowIpv4HeaderError', models.IntegerField()),
                ('everCRC', models.IntegerField()),
                ('everIpv4HeaderError', models.IntegerField()),
                ('stateCRC', models.FloatField()),
                ('stateIpv4HeadError', models.FloatField()),
                ('record_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PortErrorFixRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name', models.CharField(max_length=255)),
                ('port', models.CharField(max_length=40)),
                ('problem_type', models.CharField(max_length=40)),
                ('problem_detail', models.TextField(null=True)),
                ('begin_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('worker', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PortPerf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name', models.CharField(max_length=255)),
                ('port', models.CharField(max_length=40)),
                ('tx_now_power', models.FloatField()),
                ('tx_high_warm', models.FloatField()),
                ('tx_low_warm', models.FloatField()),
                ('tx_state', models.IntegerField()),
                ('rx_now_power', models.FloatField()),
                ('rx_high_warm', models.FloatField()),
                ('rx_low_warm', models.FloatField()),
                ('rx_state', models.IntegerField()),
                ('utility_in', models.FloatField()),
                ('utility_out', models.FloatField()),
                ('record_time', models.DateTimeField()),
            ],
            options={
                'ordering': ['-record_time'],
            },
        ),
        migrations.AddIndex(
            model_name='portperf',
            index=models.Index(fields=['device_name'], name='inspection__device__1efd93_idx'),
        ),
        migrations.AddIndex(
            model_name='portperf',
            index=models.Index(fields=['port'], name='inspection__port_a20512_idx'),
        ),
        migrations.AddIndex(
            model_name='porterrordiff',
            index=models.Index(fields=['device_name'], name='inspection__device__84792d_idx'),
        ),
        migrations.AddIndex(
            model_name='porterrordiff',
            index=models.Index(fields=['port'], name='inspection__port_885f82_idx'),
        ),
        migrations.AddIndex(
            model_name='onewaydevice',
            index=models.Index(fields=['device_name'], name='inspection__device__8dba78_idx'),
        ),
        migrations.AddIndex(
            model_name='onewaydevice',
            index=models.Index(fields=['port'], name='inspection__port_f434c1_idx'),
        ),
    ]
