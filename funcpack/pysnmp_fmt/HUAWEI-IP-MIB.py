#
# PySNMP MIB module HUAWEI-IP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/HUAWEI-IP-MIB
# Produced by pysmi-0.3.4 at Thu Jun 20 22:23:40 2019
# On host ? platform ? version ? by user ?
# Using Python version 3.6.8 (tags/v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hwInternetProtocol, huawei, hwLocal = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "hwInternetProtocol", "huawei", "hwLocal")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, ObjectIdentity, Counter32, Bits, MibIdentifier, Integer32, Gauge32, ModuleIdentity, IpAddress, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "ObjectIdentity", "Counter32", "Bits", "MibIdentifier", "Integer32", "Gauge32", "ModuleIdentity", "IpAddress", "Unsigned32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rIp = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1))
ipTooShorts = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTooShorts.setStatus('mandatory')
ipTooSmalls = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipTooSmalls.setStatus('mandatory')
ipBadVersions = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipBadVersions.setStatus('mandatory')
ipBadChecksums = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipBadChecksums.setStatus('mandatory')
ipBadLens = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipBadLens.setStatus('mandatory')
ipBadHeadLens = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipBadHeadLens.setStatus('mandatory')
ipBadOptions = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipBadOptions.setStatus('mandatory')
ipFragDroppeds = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipFragDroppeds.setStatus('mandatory')
ipRawOuts = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipRawOuts.setStatus('mandatory')
ipRouteBadRedirects = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipRouteBadRedirects.setStatus('mandatory')
ipRouteDynamics = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipRouteDynamics.setStatus('mandatory')
ipRouteNewGateways = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipRouteNewGateways.setStatus('mandatory')
ipRouteUnreachs = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipRouteUnreachs.setStatus('mandatory')
ipRouteWilds = MibScalar((1, 3, 6, 1, 4, 1, 2011, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipRouteWilds.setStatus('mandatory')
mibBuilder.exportSymbols("HUAWEI-IP-MIB", ipRouteDynamics=ipRouteDynamics, ipRouteUnreachs=ipRouteUnreachs, rIp=rIp, ipTooSmalls=ipTooSmalls, ipRawOuts=ipRawOuts, ipBadChecksums=ipBadChecksums, ipTooShorts=ipTooShorts, ipBadHeadLens=ipBadHeadLens, ipBadOptions=ipBadOptions, ipBadLens=ipBadLens, ipRouteNewGateways=ipRouteNewGateways, ipRouteWilds=ipRouteWilds, ipFragDroppeds=ipFragDroppeds, ipBadVersions=ipBadVersions, ipRouteBadRedirects=ipRouteBadRedirects)
